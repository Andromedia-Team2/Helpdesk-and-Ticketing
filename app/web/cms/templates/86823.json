{"content":{"type":"API","structure":"","server_on_load":"async ({\n  template,\n  params,\n  render,\n  db,\n  req,\n  reply,\n  user,\n  log,\n  ext,\n  isDev,\n}: Server) => {\n  const { dateLevel, task } = req.body;\n  var myDate;\n  var stats = [];\n  var types = {};\n  var label = [];\n  var color = [];\n  var mValue = [];\n\n  if (dateLevel === null) {\n    myDate = new Date();\n  } else {\n    myDate = dateLevel;\n  }\n\n  //Get Ticket Data By Level\n  if (task === \"level\") {\n    // For Vendor\n    if (user.user.role === \"Vendor\") {\n      var high = await db.history_ticket.count({\n        where: {\n          OR: [\n            {\n              id_level_ticket: 1,\n              solvedDay: myDate,\n              id_vendor: user.user.dataUser.id_vendor,\n            },\n            {\n              id_level_ticket: 1,\n              solvedDay: null,\n              id_vendor: user.user.dataUser.id_vendor,\n            },\n          ],\n        },\n      });\n      var medium = await db.history_ticket.count({\n        where: {\n          OR: [\n            {\n              id_level_ticket: 2,\n              solvedDay: myDate,\n              id_vendor: user.user.dataUser.id_vendor,\n            },\n            {\n              id_level_ticket: 2,\n              solvedDay: null,\n              id_vendor: user.user.dataUser.id_vendor,\n            },\n          ],\n        },\n      });\n      var low = await db.history_ticket.count({\n        where: {\n          OR: [\n            {\n              id_level_ticket: 3,\n              solvedDay: myDate,\n              id_vendor: user.user.dataUser.id_vendor,\n            },\n            {\n              id_level_ticket: 3,\n              solvedDay: null,\n              id_vendor: user.user.dataUser.id_vendor,\n            },\n          ],\n        },\n      });\n      stats = [high, medium, low];\n    }\n    //For Employee\n    if (user.user.role === \"Employee\") {\n      var high = await db.history_ticket.count({\n        where: {\n          OR: [\n            {\n              id_level_ticket: 1,\n              solvedDay: myDate,\n              id_employee: user.user.dataUser.id_employee,\n            },\n            {\n              id_level_ticket: 1,\n              solvedDay: null,\n              id_employee: user.user.dataUser.id_employee,\n            },\n          ],\n        },\n      });\n      var medium = await db.history_ticket.count({\n        where: {\n          OR: [\n            {\n              id_level_ticket: 2,\n              solvedDay: myDate,\n              id_employee: user.user.dataUser.id_employee,\n            },\n            {\n              id_level_ticket: 2,\n              solvedDay: null,\n              id_employee: user.user.dataUser.id_employee,\n            },\n          ],\n        },\n      });\n      var low = await db.history_ticket.count({\n        where: {\n          OR: [\n            {\n              id_level_ticket: 3,\n              solvedDay: myDate,\n              id_employee: user.user.dataUser.id_employee,\n            },\n            {\n              id_level_ticket: 3,\n              solvedDay: null,\n              id_employee: user.user.dataUser.id_employee,\n            },\n          ],\n        },\n      });\n      stats = [high, medium, low];\n    }\n    //For Client\n    if (user.user.role === \"Client\") {\n      var high = await db.history_ticket.count({\n        where: {\n          OR: [\n            {\n              id_level_ticket: 1,\n              solvedDay: myDate,\n              id_employee: user.user.dataUser.id_employee,\n              id_client: user.user.dataUser.id_client,\n            },\n            {\n              id_level_ticket: 1,\n              solvedDay: null,\n              id_employee: user.user.dataUser.id_employee,\n              id_client: user.user.dataUser.id_client,\n            },\n          ],\n        },\n      });\n      var medium = await db.history_ticket.count({\n        where: {\n          OR: [\n            {\n              id_level_ticket: 2,\n              solvedDay: myDate,\n              id_employee: user.user.dataUser.id_employee,\n              id_client: user.user.dataUser.id_client,\n            },\n            {\n              id_level_ticket: 2,\n              solvedDay: null,\n              id_employee: user.user.dataUser.id_employee,\n              id_client: user.user.dataUser.id_client,\n            },\n          ],\n        },\n      });\n      var low = await db.history_ticket.count({\n        where: {\n          OR: [\n            {\n              id_level_ticket: 3,\n              solvedDay: myDate,\n              id_employee: user.user.dataUser.id_employee,\n              id_client: user.user.dataUser.id_client,\n            },\n            {\n              id_level_ticket: 3,\n              solvedDay: null,\n              id_employee: user.user.dataUser.id_employee,\n              id_client: user.user.dataUser.id_client,\n            },\n          ],\n        },\n      });\n      stats = [high, medium, low];\n    }\n  }\n\n  //Get Ticket Data By Type\n  if (task === \"type\") {\n    var ticketType = await db.jenis_ticket.findMany({\n      where: {\n        id_vendor: user.user.dataUser.id_vendor,\n      },\n    });\n    // For Vendor\n    if (user.user.role === \"Vendor\") {\n      for (let i = 0; i < ticketType.length; i++) {\n        label.push(ticketType[i].jenis_ticket);\n        color.push(ticketType[i].identityColor);\n        var jumlah = await db.history_ticket.count({\n          where: {\n            OR: [\n              {\n                id_jenis_ticket: ticketType[i].id_jenis_ticket,\n                solvedDay: myDate,\n                id_vendor: user.user.dataUser.id_vendor,\n              },\n              {\n                id_jenis_ticket: ticketType[i].id_jenis_ticket,\n                solvedDay: null,\n                id_vendor: user.user.dataUser.id_vendor,\n              },\n            ],\n          },\n        });\n        mValue.push(jumlah);\n      }\n    }\n    //For Employee\n    if (user.user.role === \"Employee\") {\n      for (let i = 0; i < ticketType.length; i++) {\n        label.push(ticketType[i].jenis_ticket);\n        color.push(ticketType[i].identityColor);\n        var jumlah = await db.history_ticket.count({\n          where: {\n            OR: [\n              {\n                id_jenis_ticket: ticketType[i].id_jenis_ticket,\n                solvedDay: myDate,\n                id_employee: user.user.dataUser.id_employee,\n              },\n              {\n                id_jenis_ticket: ticketType[i].id_jenis_ticket,\n                solvedDay: null,\n                id_employee: user.user.dataUser.id_employee,\n              },\n            ],\n          },\n        });\n        mValue.push(jumlah);\n      }\n    }\n    //For Client\n    if (user.user.role === \"Client\") {\n      for (let i = 0; i < ticketType.length; i++) {\n        label.push(ticketType[i].jenis_ticket);\n        color.push(ticketType[i].identityColor);\n        var jumlah = await db.history_ticket.count({\n          where: {\n            OR: [\n              {\n                id_jenis_ticket: ticketType[i].id_jenis_ticket,\n                solvedDay: myDate,\n                id_client: user.user.dataUser.id_client,\n              },\n              {\n                id_jenis_ticket: ticketType[i].id_jenis_ticket,\n                solvedDay: null,\n                id_client: user.user.dataUser.id_client,\n              },\n            ],\n          },\n        });\n        mValue.push(jumlah);\n      }\n    }\n\n    types = { labels: label, color: color, iData: mValue };\n  }\n\n  //Get Ticket Data By Level & Type\n  if (task === \"both\") {\n    // For Vendor\n    if (user.user.role === \"Vendor\") {\n      var high = await db.history_ticket.count({\n        where: {\n          OR: [\n            {\n              id_level_ticket: 1,\n              solvedDay: myDate,\n              id_vendor: user.user.dataUser.id_vendor,\n            },\n            {\n              id_level_ticket: 1,\n              solvedDay: null,\n              id_vendor: user.user.dataUser.id_vendor,\n            },\n          ],\n        },\n      });\n      var medium = await db.history_ticket.count({\n        where: {\n          OR: [\n            {\n              id_level_ticket: 2,\n              solvedDay: myDate,\n              id_vendor: user.user.dataUser.id_vendor,\n            },\n            {\n              id_level_ticket: 2,\n              solvedDay: null,\n              id_vendor: user.user.dataUser.id_vendor,\n            },\n          ],\n        },\n      });\n      var low = await db.history_ticket.count({\n        where: {\n          OR: [\n            {\n              id_level_ticket: 3,\n              solvedDay: myDate,\n              id_vendor: user.user.dataUser.id_vendor,\n            },\n            {\n              id_level_ticket: 3,\n              solvedDay: null,\n              id_vendor: user.user.dataUser.id_vendor,\n            },\n          ],\n        },\n      });\n\n      var ticketType = await db.jenis_ticket.findMany({\n        where: {\n          id_vendor: user.user.dataUser.id_vendor,\n        },\n      });\n      for (let i = 0; i < ticketType.length; i++) {\n        label.push(ticketType[i].jenis_ticket);\n        color.push(ticketType[i].identityColor);\n        var jumlah = await db.history_ticket.count({\n          where: {\n            OR: [\n              {\n                id_jenis_ticket: ticketType[i].id_jenis_ticket,\n                solvedDay: myDate,\n                id_vendor: user.user.dataUser.id_vendor,\n              },\n              {\n                id_jenis_ticket: ticketType[i].id_jenis_ticket,\n                solvedDay: null,\n                id_vendor: user.user.dataUser.id_vendor,\n              },\n            ],\n          },\n        });\n        mValue.push(jumlah);\n      }\n\n      stats = [high, medium, low];\n      types = { labels: label, color: color, iData: mValue };\n    }\n    //For Employee\n    if (user.user.role === \"Employee\") {\n      var high = await db.history_ticket.count({\n        where: {\n          OR: [\n            {\n              id_level_ticket: 1,\n              solvedDay: myDate,\n              id_employee: user.user.dataUser.id_employee,\n            },\n            {\n              id_level_ticket: 1,\n              solvedDay: null,\n              id_employee: user.user.dataUser.id_employee,\n            },\n          ],\n        },\n      });\n      var medium = await db.history_ticket.count({\n        where: {\n          OR: [\n            {\n              id_level_ticket: 2,\n              solvedDay: myDate,\n              id_employee: user.user.dataUser.id_employee,\n            },\n            {\n              id_level_ticket: 2,\n              solvedDay: null,\n              id_employee: user.user.dataUser.id_employee,\n            },\n          ],\n        },\n      });\n      var low = await db.history_ticket.count({\n        where: {\n          OR: [\n            {\n              id_level_ticket: 3,\n              solvedDay: myDate,\n              id_employee: user.user.dataUser.id_employee,\n            },\n            {\n              id_level_ticket: 3,\n              solvedDay: null,\n              id_employee: user.user.dataUser.id_employee,\n            },\n          ],\n        },\n      });\n      var ticketType = await db.jenis_ticket.findMany({\n        where: {\n          id_vendor: user.user.dataUser.id_vendor,\n        },\n      });\n\n      for (let i = 0; i < ticketType.length; i++) {\n        label.push(ticketType[i].jenis_ticket);\n        color.push(ticketType[i].identityColor);\n        var jumlah = await db.history_ticket.count({\n          where: {\n            OR: [\n              {\n                id_jenis_ticket: ticketType[i].id_jenis_ticket,\n                solvedDay: myDate,\n                id_employee: user.user.dataUser.id_employee,\n              },\n              {\n                id_jenis_ticket: ticketType[i].id_jenis_ticket,\n                solvedDay: null,\n                id_employee: user.user.dataUser.id_employee,\n              },\n            ],\n          },\n        });\n        mValue.push(jumlah);\n      }\n\n      stats = [high, medium, low];\n      types = { labels: label, color: color, iData: mValue };\n    }\n    //For Client\n    if (user.user.role === \"Client\") {\n      var high = await db.history_ticket.count({\n        where: {\n          OR: [\n            {\n              id_level_ticket: 1,\n              solvedDay: myDate,\n              id_employee: user.user.dataUser.id_employee,\n              id_client: user.user.dataUser.id_client,\n            },\n            {\n              id_level_ticket: 1,\n              solvedDay: null,\n              id_employee: user.user.dataUser.id_employee,\n              id_client: user.user.dataUser.id_client,\n            },\n          ],\n        },\n      });\n      var medium = await db.history_ticket.count({\n        where: {\n          OR: [\n            {\n              id_level_ticket: 2,\n              solvedDay: myDate,\n              id_employee: user.user.dataUser.id_employee,\n              id_client: user.user.dataUser.id_client,\n            },\n            {\n              id_level_ticket: 2,\n              solvedDay: null,\n              id_employee: user.user.dataUser.id_employee,\n              id_client: user.user.dataUser.id_client,\n            },\n          ],\n        },\n      });\n      var low = await db.history_ticket.count({\n        where: {\n          OR: [\n            {\n              id_level_ticket: 3,\n              solvedDay: myDate,\n              id_employee: user.user.dataUser.id_employee,\n              id_client: user.user.dataUser.id_client,\n            },\n            {\n              id_level_ticket: 3,\n              solvedDay: null,\n              id_employee: user.user.dataUser.id_employee,\n              id_client: user.user.dataUser.id_client,\n            },\n          ],\n        },\n      });\n\n      var ticketType = await db.jenis_ticket.findMany({\n        where: {\n          id_vendor: user.user.dataUser.id_vendor,\n        },\n      });\n\n      for (let i = 0; i < ticketType.length; i++) {\n        label.push(ticketType[i].jenis_ticket);\n        color.push(ticketType[i].identityColor);\n        var jumlah = await db.history_ticket.count({\n          where: {\n            OR: [\n              {\n                id_jenis_ticket: ticketType[i].id_jenis_ticket,\n                solvedDay: myDate,\n                id_client: user.user.dataUser.id_client,\n              },\n              {\n                id_jenis_ticket: ticketType[i].id_jenis_ticket,\n                solvedDay: null,\n                id_client: user.user.dataUser.id_client,\n              },\n            ],\n          },\n        });\n        mValue.push(jumlah);\n      }\n\n      stats = [high, medium, low];\n      types = { labels: label, color: color, iData: mValue };\n    }\n  }\n\n  reply.send({\n    data: { stats, types },\n  })\n}","figma":{}},"title":"get-stats","type":"cms-template","lang":"","status":"SYSTEM","parent_id":"66283","slug":"/api/get-stats","site":"*","id":"86823"}