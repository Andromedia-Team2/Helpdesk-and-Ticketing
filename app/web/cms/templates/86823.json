{"content":{"type":"API","structure":"","server_on_load":"async ({\n  template,\n  params,\n  render,\n  db,\n  req,\n  reply,\n  user,\n  log,\n  ext,\n  isDev,\n}: Server) => {\n  const { dateLevel } = req.body;\n  var myDate;\n  var stats = [];\n\n  if (dateLevel === null) {\n    myDate = new Date();\n  } else {\n    myDate = dateLevel;\n  }\n\n  var high = await db.history_ticket.count({\n    where: {\n      OR: [\n        {\n          id_level_ticket: 1,\n          solvedDay: myDate,\n        },\n        {\n          id_level_ticket: 1,\n          solvedDay: null,\n        },\n      ],\n    },\n  });\n  var medium = await db.history_ticket.count({\n    where: {\n      OR: [\n        {\n          id_level_ticket: 2,\n          solvedDay: myDate,\n        },\n        {\n          id_level_ticket: 2,\n          solvedDay: null,\n        },\n      ],\n    },\n  });\n  var low = await db.history_ticket.count({\n    where: {\n      OR: [\n        {\n          id_level_ticket: 3,\n          solvedDay: myDate,\n        },\n        {\n          id_level_ticket: 3,\n          solvedDay: null,\n        },\n      ],\n    },\n  });\n  stats = [high, medium, low];\n  reply.send({\n    data: stats,\n  })\n}","figma":{}},"title":"get-stats","type":"cms-template","lang":"","status":"SYSTEM","parent_id":"66283","slug":"/api/get-stats","site":"*","id":"86823"}