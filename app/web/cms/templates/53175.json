{"content":{"type":"API","structure":"","server_on_load":"async ({\n  template,\n  params,\n  render,\n  db,\n  req,\n  reply,\n  user,\n  log,\n  ext,\n  isDev,\n}: Server) => {\n  if (user.user.role != \"guest\") {\n    return reply.status(409).send({\n      status: \"ERROR\",\n      message:\n        \"You are already logged in, please log out first to switch your account.\",\n      data: user.user,\n    });\n  }\n\n  const { username, password, task } = req.body;\n  const users = await db.users.findUnique({\n    where: {\n      username: username,\n    },\n  });\n\n  if (!users) {\n    return reply.status(404).send({\n      status: \"ERROR\",\n      message:\n        \"Your account hasnâ€™t registered yet. Make sure the username you entered is correct.\",\n    });\n  }\n  //const pass_encrypt = await ext.argon2.hash(users.password);\n  const pass_verify = await ext.argon2.verify(users.password, password);\n\n  if (!pass_verify) {\n    return reply.status(403).send({\n      status: \"ERROR\",\n      message:\n        \"Password you entered is incorrect. Make sure the password you entered is correct.\",\n    });\n  }\n\n  var dataUser = {};\n  var namaRole = \"\";\n\n  //Login for Website\n  if (task === \"web\") {\n    if (users.id_role == 1) {\n      namaRole = \"Super Admin\";\n    } else if (users.id_role == 2) {\n      namaRole = \"Vendor\";\n      dataUser = await db.vendor.findUnique({\n        where: {\n          id_user: users.id_user,\n        },\n      });\n    } else if (users.id_role == 3) {\n      namaRole = \"Client\";\n      dataUser = await db.client.findUnique({\n        where: {\n          id_user: users.id_user,\n        },\n      });\n    } else {\n      namaRole = \"Employee\";\n      dataUser = await db.employee.findUnique({\n        where: {\n          id_user: users.id_user,\n        },\n        include: {\n          vendor: true,\n        },\n      });\n    }\n  }\n\n  //Login for Mobile\n  if (task === \"mobile\") {\n    if (users.id_role == 3) {\n      namaRole = \"Client\";\n      dataUser = await db.client.findUnique({\n        where: {\n          id_user: users.id_user,\n        },\n      });\n    } else {\n      return reply.status(403).send({\n        status: \"ERROR\",\n        message:\n          \"This login page is only for clients. Please use the web application.\",\n      });\n    }\n  }\n\n  user.user = { role: namaRole, dataUser };\n\n  reply.status(200).send({\n    status: \"SUCCESS\",\n    message: \"Berhasil login\",\n    data: user.user,\n  })\n}","figma":{}},"title":"login","type":"cms-template","lang":"","status":"SYSTEM","parent_id":"66283","slug":"/api/login","site":"*","id":"53175"}